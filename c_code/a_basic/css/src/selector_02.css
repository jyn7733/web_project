@charset "utf-8";
#wrap{
  width: 9000px; height: auto;
  margin-bottom: 500px;
}

ul,li{margin:0; padding:0; list-style:none;}
.nth_child_01{width:50px; height:auto; background-color:#aac;}

.nth_child_01 > li {
  width:100%; height:20px; 
  border-width: 1px; border-style: solid; border-color: #777;
}

/*
*:nth-child는 반드시 연속되어진 요소끼리 처리하는 형태.
*가급적이면 중간에 다른 요소가 들어갈 수 없는 요소에 사용하는 것이 좋다.

1. 3번째 요소에 글씨색을 빨간색으로 처리
2. 뒤에서 2번째 요소에 글씨색을 암적색으로 처리
3. 마지막 요소 글씨 노란색 (:last-child 는 마지막 요소 선택, :first-child 는 첫번째 요소 선택)
4. 네 번째 마다 배경색상을 회색으로 처리
5. 네 번째 마다 중 첫번째에 해당하느 요소에 글씨의 굵기를 굵게 처리 
6. 네 번째 마다에서 네 번째 바로 전에 해당하는 요소에 글씨 크기를 더 작게 처리
7. 다섯 번째부터 일곱 번째는 글씨에 밑줄 생성

*/
.nth_child_01 > li:nth-child(3) {color:#f00;}
.nth_child_01 > li:nth-last-child(2) {color:#b00;}
.nth_child_01 > li:first-child,
.nth_child_01 > li:last-child {color: #fa0;}
.nth_child_01 > li:nth-child(4n) {background-color:#ccc;}
.nth_child_01 > li:nth-child(4n+1) {font-weight: 900;}
.nth_child_01 > li:nth-child(4n-1) {font-size: 0.8rem;}
.nth_child_01 > li:nth-child(n + 5):nth-child(-n + 7) {text-decoration: underline;}
/*
5번째(n) ~ 7번째까지(n) n은 둘을 이어주는 매개체로 어떤아이(n)의 기준부터 어떤아이의 기준까지.
*/

.nth_child_02 {
  width: 70px; height: auto; padding:5px; background-color:#ddd;
}

h3,p{margin:0; padding:0;}

.nth_child_02 > * {
  border:1px solid #777;
}

/* 
p요소중에 3번째 요소에 배경색상을 #acf로 처리
p요소중에 첫번째, 마지막 요소에 배경색을 #fa0 처리
*/
.nth_child_02 > p:nth-of-type(3) {background-color: #acf;}
.nth_child_02 > p:first-of-type,
.nth_child_02 > p:last-of-type {background-color: #fa0;}
/** :nth-of-type()
*동일한 레벨의 요소에서(형제중에서)연속되어 있지 않더라도
동일한 타입(태그)를 선택하여 처리.
*/
/*====================================================  */
dl,dt,dd {
  margin:0; padding: 0;
}
.siblings,
.siblings_02 {
  width:400px; height:auto; 
  padding:5px;
  background-color: #daa;
}
.siblings > dt,
.siblings_02 > dt {
  width: 100%; height: 25px; background-color: #077;
  border-bottom: 2px solid #fff;
  color:#fff; font-weight: 900;
}

.siblings > dd,
.siblings_02 > dd {
  width: 100%; height:0px; background-color: #dfdfdf;
  overflow: hidden;
}

.siblings > dt:hover,
.siblings_02 > dt:hover {
  background-color: #07a;
  cursor:pointer;
}

.siblings > dt:hover + dd{
height: 50px;
}
.siblings_02 > dt:hover ~ dd {
  height: 50px;
}

.siblings_02 > dd{
  transition:all 500ms ease;
  margin-bottom:5px;
} 

/* 
transition _ 단회성의 애니메이션
animation _ 다회성의 애니메이션
*/

/* 
형제선택자
~ 형제선택자 중 먼저 선택한 요소의 뒤에(dt) 오는 모든 선택요소(dd) 
의미.

+ 형제선택자 중 인접하여 붙어있는 바로 뒤에 오는 선택요소
*/