@charset "utf-8";
/* position_01.css */

/* reset.css */
html, body{margin: 0;}
h1,h2,h3,h4,h5,h6,p{margin: 0;}
ul,ol,dl,dt,dd{margin: 0; padding: 0; list-style:none;}

/* common.css */
.clearfix:after,
.clearfix::after{ content: " "; display: block; clear: both;}

/* laout.css */
#wrap{
  width: 800px; height: 5000px; margin: auto;
  background-color: rgba(230,230,230,0.5);
  background-image: linear-gradient( rgba(230,230,230,0.5),#ffccaa, #accfff);
}
.position{
  width: 80%; height: 150px; margin: auto; border: 1px solid #333;
}
.position > ul{ width: 100%; height: 100%;}
.position >ul > li{
  float: left; width: 100px; height: 100px; border: 2px solid #fac; box-sizing: border-box; font-size: 1.5rem;  text-align: center; line-height: 80px;}
.default{ background-color: #5992D0;}
.static{ background-color: #CC624D;}
.fixed{ background-color: #D03093;}
.absolute{ background-color: #406D21;}
.relative{ background-color: #DFEE28;}

/* ------------------------------------------------ */
/* position 
  *position:static - 가장 기본형으로 top, left, right, bottom,z-index  모두 사용되지 않는다.

  *position:fixed - 화면상에 고정처리된 것 처럼 표현하는 형태로. 기준은 브라우저 이며.
          top, left, right, bottom, z-index 모두 사용가능하며 가급적
          top/bottom,  left/rigth 처럼 반대의 개념으로 잡히는 경우는 주의해서 사용
  *position:absolute - 기준이 존재하지 않으면: 브라우저를 기준으로 위치
                       기준이 존재하면(absolute, fixed, relatvie) : 해당 요소를 기준으로 위치
                       top, left, right, bottom, z-index 모두 사용가능
                        
  *position:ralatvie - 자신을 기준으로 위치를 이동할 수 있으며, 
              주변 요소에 영향이 미치지 않는다.
              top, left, right, bottom, z-index 모두 사용가능

  *z-index: n; - postition 요소의 앞/뒤 위치를 잡아주는 형태로써,
                '-'값을 사용하면 선택하기 어려울 수 있다.
                단, 기준이 되는 요소에서 +/- 상황에 따라 내부에 요소는 z-index 값이 달라질 수 있다.
*/
.position > ul{position: relative;  z-index: 1;}

.static{
  position: static; top:400px; left:5000px; z-index:-1000;
}
.fixed{
  position: fixed; top:0; right: 100px; z-index: -100;
}
/* top과 bottom을 동시에 쓰면 top이 우선순위로 먹는다.
    left와 right를 동시에 쓰면 left가 우선순위로 먹는다.
    단, 모든 상황에서 그렇다는 것은 아니다.
    
    margin:auto; 를 쓰고서 top과 bottom을 쓰면 둘의 중앙에 배치.
    */
.absolute{
  position: absolute; top:250px; right: 50px; z-index: -2;}
.relative{ position: relative; top:150px; left:-230px; z-index: -1; }  